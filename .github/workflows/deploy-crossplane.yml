name: Deploy Crossplane AWS Resources

on:
  push:
    paths:
      - 'crossplane/providerconfig.yaml'
      - 'crossplane/vpc.yaml'
      - 'crossplane/instance.yaml'
      - '.github/workflows/deploy-crossplane.yaml'

  workflow_dispatch: 

jobs:
  deploy:
    runs-on: self-hosted  # use your self-hosted runner label

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # If kubectl already installed on runner, skip this step
      - name: Setup kubectl (optional)
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # If your runner already has kubeconfig configured, skip this step
      # Otherwise, uncomment below to setup kubeconfig from secret
      #- name: Setup KUBECONFIG
      #  run: |
      #    mkdir -p ~/.kube
      #    echo "${{ secrets.KUBECONFIG }}" | base64 --decode > ~/.kube/config
      #    chmod 600 ~/.kube/config

      - name: Apply ProviderConfig
        shell: pwsh
        run: |
          kubectl apply -f crossplane/providerconfig.yaml

      - name: Apply VPC
        shell: pwsh
        run: |
          kubectl apply -f crossplane/vpc.yaml

      - name: Apply Instance
        shell: pwsh
        run: |
          kubectl apply -f crossplane/instance.yaml

      - name: Wait for VPC to become Ready
        run: |
          for i in {1..30}; do
            READY=$(kubectl get vpc.ec2.aws.crossplane.io sample-vpc1 -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}' || echo "False")
            if [[ "$READY" == "True" ]]; then
              echo "VPC is Ready"
              exit 0
            fi
            echo "Waiting for VPC to be Ready... Attempt $i/30"
            sleep 10
          done
          echo "Timed out waiting for VPC to be Ready"
          exit 1
